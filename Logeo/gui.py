
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"E:\Sistema\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1194x639")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 639,
    width = 1194,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    515.0,
    320.0,
    image=image_image_1
)

canvas.create_rectangle(
    964.0,
    0.0,
    1194.0,
    639.0,
    fill="#1A1464",
    outline="")
entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=2,
    highlightbackground="#D02F28",
    highlightcolor="#FF0303"
)
entry_1.place(
    x=1007.0,
    y=316.0,
    width=143.0,
    height=35.0
)
placeholder = "Contraseña"
entry_1.insert(0, placeholder)
entry_1.config(fg="gray")

def on_focus_in(event):
    if entry_1.get() == placeholder:
        entry_1.delete(0, "end")
        entry_1.config(fg="#000716")
    if not checkbox_checked[0]: 
        entry_1.config(show="*")

def on_focus_out(event):
    if entry_1.get() == "":
        entry_1.insert(0, placeholder)
        entry_1.config(fg="gray",show="")

entry_1.bind("<FocusIn>", on_focus_in)
entry_1.bind("<FocusOut>", on_focus_out)

entry_2 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=2,
    highlightbackground="#D02F28",
    highlightcolor="#FF0303"
)
entry_2.place(
    x=1007.0,
    y=228.0,
    width=143.0,
    height=35.0
)
placeholder2 = "Nombre de usuario"
entry_2.insert(0, placeholder2)
entry_2.config(fg="gray")

def on_focus_in(event):
    if entry_2.get() == placeholder2:
        entry_2.delete(0, "end")
        entry_2.config(fg="#000716")

def on_focus_out(event):
    if entry_2.get() == "":
        entry_2.insert(0, placeholder2)
        entry_2.config(fg="gray")

entry_2.bind("<FocusIn>", on_focus_in)
entry_2.bind("<FocusOut>", on_focus_out)
checkbox_rect = canvas.create_rectangle(
    1000.0,
    402.0,
    1020.0,
    420.0,
    fill="#FFFFFF",
    outline="#D02F28"
)

# Variable to track checkbox state
checkbox_checked = [False]  # Use list for mutability in nested function

def toggle_password(event):
    checkbox_checked[0] = not checkbox_checked[0]
    if checkbox_checked[0]:
        entry_1.config(show="")
        # Draw checkmark
        canvas.create_line(1004, 410, 1010, 416, fill="#D02F28", width=2, tag="checkmark")
        canvas.create_line(1010, 416, 1018, 404, fill="#D02F28", width=2, tag="checkmark")
    else:
        if entry_1.get() != placeholder:
            entry_1.config(show="*")
            # Remove checkmark
        canvas.delete("checkmark")

# Bind click event to the rectangle
canvas.tag_bind(checkbox_rect, "<Button-1>", toggle_password)

# Set password entry to hidden by default
entry_1.config(show="")

canvas.create_text(
    1023.0,
    403.0,
    anchor="nw",
    text="Mostrar contraseña",
    fill="#D02F28",
    font=("HammersmithOne Regular", 14 * -1)
)
border_frame = Frame(window, bg="red", highlightthickness=0)
border_frame.place(x=1013, y=457, width=128, height=25)
button_1 = Button(
    border_frame,
    text="Iniciar sesión",
    borderwidth=0,         # No internal border
    bg="#FFFFFF",          # Button background
    activebackground="#F0F0F0",
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.pack(fill="both", expand=True, padx=2, pady=2)
window.resizable(False, False)
window.mainloop()
